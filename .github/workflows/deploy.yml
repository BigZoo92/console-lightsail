name: Build and Deploy

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

env:
  DEPLOY_PACKAGE_NAME_FILE: "${{ github.sha }}.zip"
  DEPLOY_PACKAGE_NAME: "${{ github.sha }}"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Run lint
        run: pnpm run lint

  test:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Run tests
        run: pnpm run test

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          npm install -g pnpm
          pnpm install

      - name: Build project
        run: pnpm run build

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/') # Exécute uniquement pour les tags
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create zip deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME_FILE }} ./dist/ -x *.git*

      - name: Copy build to Lightsail
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_IP }}
          username: ${{ secrets.AWS_USER }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          source: ${{ env.DEPLOY_PACKAGE_NAME_FILE }}
          target: "/home/${{ secrets.AWS_USER }}"
          password: ""
          passphrase: ""
          port: 22

      - name: Deploy to Lightsail
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.LIGHTSAIL_IP }}
          username: ${{ secrets.AWS_USER }}
          password: ""
          passphrase: ""
          port: 22
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            # Créer le répertoire cible s'il n'existe pas
            mkdir -p /home/${{ secrets.AWS_USER }}/console-app

            # Extraire le contenu du package dans le dossier cible
            unzip -q -o /home/${{ secrets.AWS_USER }}/${{ env.DEPLOY_PACKAGE_NAME_FILE }} -d /home/${{ secrets.AWS_USER }}/console-app

            # Supprimer le fichier .zip après extraction
            rm /home/${{ secrets.AWS_USER }}/${{ env.DEPLOY_PACKAGE_NAME_FILE }}

            # Vérifier et configurer NGINX
            sudo tee /etc/nginx/sites-available/console-app <<EOL
            server {
                listen 80;
                server_name console.enzogivernaud.com;

                root /home/${{ secrets.AWS_USER }}/console-app;
                index index.html;

                location / {
                    try_files \$uri /index.html;
                }
            }
            EOL

            # Activer le site et redémarrer NGINX
            sudo ln -sf /etc/nginx/sites-available/console-app /etc/nginx/sites-enabled/
            sudo systemctl restart nginx

      - name: Deployment completed Successfully
        run: echo "Deployment completed successfully"
